If we load something that will be an rdd.
If we load a table that is called as data frame because table has already structured data and then we can use it.

Map : for each element it produces one value as output (one to one relationship)
Like :array(“puji”,”puijtha”) 
Output. Will be array(“puji”),array(“pujitha”)

Flatmap:so like this it will give array of many elements (one to many relationship)
array(“iam pujitha”)
O/p: will be array of many elements Array(“iam”,”pujihta")

repartition:-
scala> val s=sc.parallelize(Array(1,2,3,4,5),2)
s: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[29] at parallelize at <console>:27
scala> s.collect()
res35: Array[Int] = Array(1, 2, 3, 4, 5)
scala> s.partitions.size
res36: Int = 2

initially we have created an rdd with 2 partitions

scala> val scl2=s.repartition(6)
scl2: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[33] at repartition at <console>:29

scala> scl2.partitions.size
res37: Int = 6

we can increase and decrease the partitions with repartition 
it will have all the data movement


coalesce :-
------------------------

val s=sc.parallelize(Array(1,2,3,4,5),2)
s.collect()
res26: Array[Int] = Array(1, 2, 3, 4, 5)
scala> s.partitions.size
res27: Int = 2
so the s rdd is in 2 partitions now


coalesce on s rdd:-

scala> val scl2=s.coalesce(1)
scl2: org.apache.spark.rdd.RDD[Int] = CoalescedRDD[23] at coalesce at <console>:29
scala> scl2.partitions.size
res28: Int = 1

we have decreased the amount of partitions now to 1
use of coalesce is there is less number of data movement associated with repartition
as data movement is the costliest operation in spark

coalesce to increse number of partitions:-
scala> val scl2=s.coalesce(3)
scl2: org.apache.spark.rdd.RDD[Int] = CoalescedRDD[23] at coalesce at <console>:29
scala> scl2.partitions.size
res28: Int = 2

so when you try to increase the number of partitions using coalesce we will not increase the number of partitions

lets take the above example so we have initialized s rdd with 2 partitions 
then we coalesce the rdd to 1 it decreased the partitions to 1
then we tried to increase the partitions to 3 but it wont supported to increase partitions more than 2 
still it is showing 2 partitions.